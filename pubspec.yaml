name: tsukuyomi
description: Tsukuyomi is an open-source manga reader built with Flutter.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.1.5 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # 添加默认本地化语言
  flutter_localizations:
    sdk: flutter

  # 代码解释
  tsukuyomi_eval:
    path: packages/tsukuyomi_eval
  # 网页解析
  tsukuyomi_html:
    path: packages/tsukuyomi_html
  # 列表组件
  tsukuyomi_list:
    path: packages/tsukuyomi_list
  # 平台数据
  tsukuyomi_metadata:
    path: packages/tsukuyomi_metadata
  # 临时补丁
  tsukuyomi_patch:
    path: packages/tsukuyomi_patch
  # 像素对齐
  tsukuyomi_pixel_snap:
    path: packages/tsukuyomi_pixel_snap
  # 漫画源
  tsukuyomi_sources:
    path: packages/tsukuyomi_sources

  # 路由导航
  go_router: ^6.2.0
  # 本地键值对储存
  shared_preferences: ^2.0.18
  # Riverpod 状态管理
  flutter_riverpod: ^2.4.8
  # Riverpod 代码生成
  riverpod_annotation: ^2.3.2
  # Freezed 代码生成
  freezed_annotation: ^2.4.1
  # Drift 持久化库
  drift: ^2.13.0
  # SQLite3 原生库
  sqlite3_flutter_libs: ^0.5.0
  # 通用文件路径
  path_provider: ^2.0.0
  # 通用路径操作
  path: ^1.8.3
  # 图片下载和缓存
  cached_network_image: ^3.2.3
  # 本地缓存文件管理
  flutter_cache_manager: ^3.3.1
  # 动画效果
  flutter_animate: ^4.1.1+1
  # Sliver 组件扩展
  sliver_tools: ^0.2.10
  # 集合操作
  collection: ^1.17.0
  # 网络请求
  dio: ^5.3.2
  # 软键盘可见性
  flutter_keyboard_visibility: ^6.0.0
  # 数据编解码
  convert: ^3.1.1
  # 数据加解密
  encrypt: ^5.0.3

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  # 代码生成工具：dart run build_runner build --delete-conflicting-outputs
  build_runner: ^2.4.6
  # 代码检查工具：dart run custom_lint
  custom_lint: ^0.5.7
  # Riverpod 代码生成
  riverpod_generator: ^2.3.8
  # Riverpod 代码检查
  riverpod_lint: ^2.3.6
  # Freezed 代码生成
  freezed: ^2.4.5
  # Drift 代码生成
  drift_dev: ^2.13.0
  # Drift 代码生成
  build_web_compilers: ^4.0.6

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # 启用本地化配置文件生成: flutter gen-l10n
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # 资源文件
  assets:
    - assets/interpreter/
    - assets/source/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
